issue :작업할당
- 개선 제안
-' #1' 같이 이슈넘버를 커밋메세지에 적어주면 연결이되어서 확인하기 좋다
-해결하고 나서 close해서 상황을 종료한다.
-필요하다면 다시 reopen할 수 있다.

branch :내 임시 작업공간
-main브랜치에서 브랜치를 생성한다.
-브랜치를 이동하는 것을 체크아웃이라고 한다.
-항상 작업을 할떄 올바른 브랜치에서 하는지 확인을 해준다.
-삭제: 브랜치를 삭제하면 내가 했던 작업들이 다 없어지고 main브랜치로 checkout된다.
-브랜치이름: 어떤작업/issue number/브랜치네임


merge : 각자 작업한 것을 합치는 것
-gitHub flow:   https://docs.github.com/en/get-started/quickstart/github-flow
-합치려고하는 기준브랜치에 체크아웃하기
-합쳐진 나머지 브랜치는 지워준다.

구글링 검색어 팁
    - 아래처럼 검색어를 조합해 입력

    - 기술을 처음 배우고 싶을 때 :  '기술이름' +  'tutorial' (예.  `git tutorial`)
    - 기능을 찾을 때 : '기술이름' + 'how to' + '찾을 내용' (예. `git how to merge` )
    - 어떻게 사용하는지 예제를 보고 싶을 때 : '기술이름' + '내용' + 'example' (예. `github flow example`)
    - 원하는 사이트명 포함해 검색할 수도 있습니다. (예: `stackoverflow git merge` - stackoverflow 라는 사이트에서 검색)


충돌
:메인 브랜치에서 두가지 브랜치를 만든다음 같은 파일을 다르게 수정해서   
 병합해서 인조적으로 충돌을 만들어보았다.

-충돌 발생 후 탐색기 파일안에 <<<<HEAD 등 이런식으로 적혀있는데
 내가 포함할부분 삭제할 부분을 그 안에서 정리해주면된다.
 대신, 정리하면서 더 추가를 할 경우 나중에 쫌;;

원격 repo의 orgin
-원격repo에 있는 브랜치를 뜻하며
 트랙킹이 되었다는 뜻은 원격브랜치와 로컬 브랜치가 연결되었다는 의미한다.






